{"version":3,"sources":["assets/avatar.png","pages/Home/Home.js","assets/icon-left-font-monochrome-white.png","components/Navbar.js","assets/icon.png","pages/Register/Register.js","pages/Login/Login.js","pages/Upload/Upload.js","pages/Profile/Profile.js","pages/Moderateur/Moderateur.js","App.js","index.js"],"names":["Home","props","useState","showId","setShowId","uploads","setUploads","threadComments","setThreadcomments","commentaire","setComments","errorMessage","setErrorMessage","token","localStorage","getItem","ariaExpanded","setariaExpanded","toggleComments","idthread","useEffect","Axios","get","then","response","order","data","reverse","likePost","post","headers","comment","checkTextInput","getComment","trim","className","map","val","image","alt","title","cloudName","publicId","author","date","slice","description","aria-label","onClick","aria-hidden","id","likecount","aria-expanded","aria-controls","event","commentcount","isLoggedIn","htmlFor","value","type","placeholder","onChange","target","com","index","avatar","src","usercomment","Navbar","history","useHistory","showLinks","setshowLinks","logo","href","userRole","removeItem","setItem","push","Register","username","setUsername","password","setPassword","background","console","log","alert","catch","error","message","Login","autoComplete","userName","role","Upload","setTitle","setDescription","setImage","reference","useRef","e","files","ref","current","setAttribute","formData","FormData","append","length","fileName","public_id","upload","Profile","yourUploads","setYourUploads","toggleModify","setAvatar","checkNewAvatar","setcheckNewAvatar","newAvatar","setnewAvatar","deleteThread","delete","modify","avatarDefault","Moderateur","deleteComment","idcomment","threadComment","idcomments","key","App","loggedIn","JSON","parse","setisloggedIn","setuserRole","setInterval","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9b09be1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.13074b25.png\";","import React, { useEffect, useState } from \"react\";\nimport \"./Home.css\";\nimport { Image } from \"cloudinary-react\";\nimport Axios from \"axios\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport ChatIcon from '@material-ui/icons/Chat';\nimport avatar from '../../assets/avatar.png';\n\nfunction Home(props) {\n  const [showId, setShowId] = useState(null);\n  const [uploads, setUploads] = useState([]);\n  const [threadComments, setThreadcomments] = useState([]);\n  const [commentaire, setComments] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const token = localStorage.getItem(\"token\");\n  const [ariaExpanded, setariaExpanded] = useState(\"false\");\n  const toggleComments = (idthread) => { setShowId(showId => showId === idthread ? null : idthread); };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/thread\").then((response) => {\n      const order = response.data.reverse()\n      setUploads(order);\n    });\n  }, []);\n\n  const likePost = (idthread) => {\n    Axios.post(\"http://localhost:3001/thread/like\", {\n      idthread: idthread,\n    }, {\n      headers: {\n        'Authorization': `bearer ${token}`\n      }\n    }).then((response) => {\n      const order = response.data.reverse()\n      setUploads(order);\n    });\n  };\n\n  const comment = (idthread) => {\n    if (checkTextInput() === true) {\n      Axios.post(\"http://localhost:3001/thread/comment\", {\n        idthread: idthread,\n        commentaire: commentaire,\n      }, {\n        headers: {\n          'Authorization': `bearer ${token}`\n        }\n      }).then((response) => {\n        const order = response.data[1].reverse()\n        setUploads(order)\n        setThreadcomments(response.data[0]);\n        setComments(\"\");\n      });\n    }\n  };\n\n  const getComment = (idthread) => {\n    if(ariaExpanded === \"true\"){setariaExpanded(\"false\")}else{setariaExpanded(\"true\")}\n    Axios.post(\"http://localhost:3001/thread/getComments\", {\n      idthread: idthread,\n    }, {\n      headers: {\n        'Authorization': `bearer ${token}`\n      }\n    }).then((response) => {\n      setThreadcomments(response.data);\n    });\n  };\n\n  const checkTextInput = () => {\n    if (!commentaire.trim()) {\n      setErrorMessage(\"Veuillez remplir le champ\");\n      return false;\n    } else {\n      setErrorMessage(null);\n      return true;\n    }\n  };\n\n\n  return (\n    <main className=\"Home\">\n      <h1>Les Dernières Publications :</h1>\n      {uploads.map((val) => {\n        if (val.image) {\n          return (\n            <article className=\"Post\" key={val.idthread} >\n              <div className=\"Image\">\n                <Image alt={\"Image de l'article \" + val.title} cloudName=\"dzbs5syc9\" publicId={val.image} />\n              </div>\n              <div className=\"Content\">\n                <div className=\"title\">\n                  {val.title} / publié par {val.author} le {val.date.slice(0, 10)}\n                </div>\n                <div className=\"description\">{val.description}</div>\n              </div>\n              <div className=\"Engagement\">\n                <button className=\"btn-icons\" aria-label=\"Bouton like\" onClick={() => { likePost(val.idthread); }} ><ThumbUpAltIcon aria-hidden=\"false\" id=\"likeButton\" /></button>\n                <div className=\"counts\">{val.likecount}</div>\n                <button className=\"btn-icons\" aria-expanded={ariaExpanded} aria-controls=\"send-com\" onClick={function (event) { toggleComments(val.idthread); getComment(val.idthread); }} ><ChatIcon id=\"commentButton\" /></button>\n                <div className=\"counts\">{val.commentcount}</div>\n              </div>\n              {showId === val.idthread && (\n                <div className=\"comments\">\n                  {props.isLoggedIn ? (\n                    <div className=\"send-com\" id=\"send-com\">\n                      <label className=\"label-img\" htmlFor=\"input-comment-id\">Répondre à la publication</label>\n                      <input\n                        id=\"input-comment-id\"\n                        className=\"input-comment\"\n                        value={commentaire}\n                        type=\"text\"\n                        placeholder=\"répondre...\"\n                        onChange={(event) => {\n                          setComments(event.target.value);\n                        }} />\n                      <button className=\"btn-comment\" onClick={() => { comment(val.idthread); setComments(\"\") }}>Envoyer</button>\n                      <p className=\"msg-err\">{errorMessage} </p>\n                    </div>\n                  ) : (null)}\n                  {threadComments.map((com, index) => {\n                    return (\n                      <div key={index} className=\"post-bottom\">\n                        {com.avatar === null && (<img className=\"img-comment\" src={avatar} alt=\"Avatar du profil\" />)}\n                        {com.avatar != null && (<Image alt=\"avatar\" cloudName=\"dzbs5syc9\" publicId={com.avatar} className=\"img-comment\" />)}\n                        <div className=\"comment\">\n                          <p className=\"userComment\">{com.usercomment}</p>\n                          <p>{com.comment}</p>\n                        </div>\n                      </div>)\n                  })}\n                </div>\n              )}\n            </article>\n          );\n        } else {\n          return (\n            <article className=\"Post\" key={val.idthread}>\n              <div className=\"Content\">\n                <div className=\"title-txt\">\n                  {val.title} / publié par {val.author} le {val.date.slice(0, 10)}\n                </div>\n                <div className=\"description\">{val.description}</div>\n              </div>\n              <div className=\"Engagement\">\n                <button className=\"btn-icons\" aria-label=\"Bouton like\" onClick={() => { likePost(val.idthread); }} ><ThumbUpAltIcon aria-hidden=\"false\" id=\"likeButton\" /></button>\n                <div className=\"counts\">{val.likecount}</div>\n                <button className=\"btn-icons\" aria-expanded={ariaExpanded} aria-label=\"Comments\" aria-controls=\"send-com\" onClick={function (event) { toggleComments(val.idthread); getComment(val.idthread); }} ><ChatIcon id=\"commentButton\" /></button>\n                <div className=\"counts\">{val.commentcount}</div>\n              </div>\n              {showId === val.idthread && ( // <-- check for index match\n                <div className=\"comments\">\n                  {props.isLoggedIn ? (\n                    <div className=\"send-com\" id=\"send-com\">\n                      <label className=\"label-img\" htmlFor=\"input-comment-id\">Répondre à la publication</label>\n                      <input\n                        id=\"input-comment-id\"\n                        className=\"input-comment\"\n                        value={commentaire}\n                        type=\"text\"\n                        placeholder=\"répondre...\"\n                        onChange={(event) => {\n                          setComments(event.target.value);\n                        }} />\n                      <button className=\"btn-comment\" onClick={() => { comment(val.idthread); setComments(\"\") }}>Envoyer</button>\n                      <p className=\"msg-err\">{errorMessage} </p>\n                    </div>\n                  ) : (null)}\n                  {threadComments.map((com, index) => {\n                    return (\n                      <div key={index} className=\"post-bottom\">\n                        {com.avatar === null && (<img className=\"img-comment\" src={avatar} alt=\"Avatar du profil\" />)}\n                        {com.avatar != null && (<Image alt=\"avatar\" cloudName=\"dzbs5syc9\" publicId={com.avatar} className=\"img-comment\" />)}\n                        <div className=\"comment\">\n                          <p className=\"userComment\">{com.usercomment}</p>\n                          <p>{com.comment}</p>\n                        </div>\n                      </div>)\n                  })}\n                </div>\n              )}\n            </article>\n          );\n        }\n      })}\n    </main>\n  );\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/icon-left-font-monochrome-white.5e5204e3.png\";","import React, { useState } from \"react\";\nimport \"./Navbar.css\";\nimport ReorderIcon from \"@material-ui/icons/Reorder\";\nimport logo from '../assets/icon-left-font-monochrome-white.png';\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction Navbar(props) {\n\n  let history = useHistory();\n  const [showLinks, setshowLinks] = useState(false);\n\n  const disconnect = () => {\n    localStorage.removeItem(\"role\");\n    localStorage.setItem(\"loggedIn\", \"false\");\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"token\");\n    history.push(\"/\");\n  };\n\n  return (\n    <header className=\"Navbar\">\n      <img className=\"navbar-img\" src={logo} alt=\"Logo de l'entreprise\" />\n      <nav className=\"right-side\">\n        <div className=\"links\" id={showLinks ? \"hidden\" : \"\"}>\n          <a href=\"/\">Forum</a>\n          {props.isLoggedIn ? ( // Opérateur ternaire\n            <>\n              <a href=\"/upload\">Publier</a>\n              <a href=\"/profile\">Profil</a>\n              {props.userRole === \"moderateur\" && (\n                <>\n                  <a href=\"/moderateur\">Gérer les publications</a>\n                </>\n              )}\n              <button className=\"btn-disconnect\" onClick={disconnect}>Se déconnecter</button>\n            </>\n          ) : (\n            <>\n              <a href=\"/register\">Inscription</a>\n              <a href=\"/login\">Connexion</a>\n            </>\n          )}\n        </div>\n        <button className=\"btn-menu\" aria-label=\"Bouton du menu\" onClick={() => setshowLinks(!showLinks)}><ReorderIcon /></button>\n      </nav>\n    </header>\n  );\n}\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/icon.56071b0f.png\";","import React, { useState } from \"react\";\nimport \"./Register.css\";\nimport background from '../../assets/icon.png';\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction Register() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  let history = useHistory();\n\n  const register = () => {\n    checkTextInput();\n    console.log(checkTextInput());\n    if (checkTextInput() === true) {\n      Axios.post(\"https://social-media-image-backend.herokuapp.com//user/register\", {\n        username: username,\n        password: password,\n      }).then((response) => {\n        history.push(\"/\");\n        alert(\"Votre compte a bien été enregistré\");\n      }).catch(function (error) {\n        if (error.response) {\n          setErrorMessage(error.response.data.message);\n        }\n      });\n    }\n  };\n\n\n  const checkTextInput = () => {\n    if (!username.trim() && !password.trim()) {\n      setErrorMessage(\"Les champs sont vides\");\n      return false;\n    } else if (!username.trim()) {\n      setErrorMessage(\"Le champ nom d'utilisateur est vide\")\n      return false;\n    } else if (!password.trim()) {\n      setErrorMessage(\"Le champ mot de passe est vide\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  return (\n    <main className=\"Register\">\n      <img className=\"navbar-img\" src={background} alt=\"Logo de Groupomania\" />\n      <h1>Inscription</h1>\n      <div className=\"RegisterForm\">\n        <label className=\"label-img\" htmlFor=\"input-username-register\">Choisir un nom d'utilisateur</label>\n        <input\n          id=\"input-username-register\"\n          type=\"text\"\n          placeholder=\"Nom d'utilisateur...\"\n          onChange={(event) => {\n            setUsername(event.target.value);\n          }}\n        />\n        <label className=\"label-img\" htmlFor=\"input-password-register\">Choisir un mot de passe</label>\n        <input\n          id=\"input-password-register\"\n          type=\"password\"\n          placeholder=\"Mot de passe...\"\n          onChange={(event) => {\n            setPassword(event.target.value);\n          }}\n        />\n        <button value=\"Inscription\" onClick={register}>S'inscrire</button>\n      </div>\n      <p className=\"msg-err\">{errorMessage}</p>\n    </main>\n  );\n}\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport \"./Login.css\";\nimport background from '../../assets/icon.png';\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  let history = useHistory();\n\n  const login = () => {\n\n    checkTextInput();\n    if (checkTextInput() === true) {\n      Axios.post(\"https://social-media-image-backend.herokuapp.com//user/login\", {\n        username: username,\n        password: password,\n      }).then((response) => {\n        localStorage.setItem(\"username\", response.data.userName);\n        localStorage.setItem(\"role\", response.data.role);\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"loggedIn\", true);\n        history.push(\"/\");\n      }).catch(function (error) {\n        if (error.response) {\n          setErrorMessage(error.response.data.message);\n        }\n      });\n    }\n  };\n  \n  const checkTextInput = () => {\n    if (!username.trim() && !password.trim()) {\n      setErrorMessage(\"Les champs sont vides\");\n      return false;\n    } else if (!username.trim()) {\n      setErrorMessage(\"Le champ nom d'utilisateur est vide\")\n      return false;\n    } else if (!password.trim()) {\n      setErrorMessage(\"Le champ mot de passe est vide\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  return (\n    <main className=\"Login\">\n      <img className=\"navbar-img\" src={background} alt=\"Logo de Groupomania\" />\n      <h1>Connexion</h1>\n      <div className=\"LoginForm\">\n        <label className=\"label-img\" htmlFor=\"input-username-login\">Remplir le champ du nom d'utilisateur</label>\n        <input\n          id=\"input-username-login\"\n          type=\"text\"\n          autoComplete=\"on\"\n          placeholder=\"Nom d'utilisateur...\"\n          onChange={(event) => {\n            setUsername(event.target.value);\n          }}\n        />\n        <label className=\"label-img\" htmlFor=\"input-password-login\">Remplir le champ du nom d'utilisateur</label>\n        <input\n          id=\"input-password-login\"\n          type=\"password\"\n          placeholder=\"Mot de passe...\"\n          onChange={(event) => {\n            setPassword(event.target.value);\n          }}\n        />\n        <button value=\"Connexion\" onClick={login}>Se connecter</button>\n      </div>\n      <p className=\"msg-err\">{errorMessage} </p>\n    </main>\n  );\n}\n\nexport default Login;\n","import React, { useState, useRef } from \"react\";\nimport \"./Upload.css\";\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Upload() {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState([]);\n  const token = localStorage.getItem(\"token\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const reference = useRef();\n\n  let history = useHistory();\n\n  const upload = () => {\n    reference.current.setAttribute(\"disabled\", \"disabled\");\n    const formData = new FormData();\n    formData.append(\"file\", image[0]);\n    formData.append(\"upload_preset\", \"h0vs2ijr\");\n    checkTextInput();\n    if(checkTextInput() === true){\n      if (image.length > 0 ){\n        Axios.post(\n          `https://api.cloudinary.com/v1_1/dzbs5syc9/image/upload`,\n          formData\n        ).then((response) => {\n          const fileName = response.data.public_id;\n          Axios.post(\"https://social-media-image-backend.herokuapp.com//thread\", {\n            title: title,\n            description: description,\n            image: fileName,\n            author: localStorage.getItem(\"username\")}, {\n              headers: {\n                'Authorization': `bearer ${token}` \n              } \n          }).then(() => {\n            history.push(\"/\");\n          });\n        });\n      }else{\n        Axios.post(\"https://social-media-image-backend.herokuapp.com//thread\", {\n          title: title,\n          description: description,\n          author: localStorage.getItem(\"username\")}, {\n            headers: {\n              'Authorization': `bearer ${token}` \n            } \n        }).then(() => {\n          history.push(\"/\");\n        });\n      }\n    }  \n  };\n  \n  const checkTextInput = () => {\n    if(!title.trim() && !description.trim()){\n      setErrorMessage(\"Les champs titre et description sont vides\");\n      return false;\n    } else if (!title.trim()) {\n      setErrorMessage(\"Le champ titre est vide\");\n      return false;\n    } else if (!description.trim()) {\n      setErrorMessage(\"Le champ description est vide\");\n      return false;\n    } else {\n      setErrorMessage(null)\n      return true;\n    }\n  };\n\n  return (\n    <main className=\"Upload\">\n      <article className=\"UploadForm\">\n      <h1>Publier un article</h1>\n      <label className=\"label-img\" htmlFor=\"input-title\">Choisir un titre</label>\n        <input\n          id=\"input-title\"\n          type=\"text\"\n          placeholder=\"Titre...\"\n          onChange={(event) => {\n            setTitle(event.target.value);\n          }}\n        />\n        <label className=\"label-img\" htmlFor=\"textarea-description\">Choisir une description</label>\n        <textarea\n          id=\"textarea-description\"\n          className=\"description-input\"\n          type=\"text\"\n          placeholder=\"Description...\"\n          onChange={(event) => {\n            setDescription(event.target.value);\n          }}\n          >\n        </textarea>\n        <label className=\"label-img\" htmlFor=\"file\">Choisir une image</label>\n        <input id =\"file\" className=\"img-input\" type=\"file\" onChange={(e) => setImage(e.target.files)} />\n        <button ref={reference} value=\"Publication\" onClick={() => upload()}>Publier</button>\n      </article>\n      <p className=\"msg-err\">{errorMessage} </p>\n    </main>\n  );\n}\n\nexport default Upload;\n","import Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Image } from \"cloudinary-react\";\nimport \"./Profile.css\";\nimport avatarDefault from '../../assets/avatar.png';\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Profile() {\n  const [yourUploads, setYourUploads] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const token = localStorage.getItem(\"token\");\n  const username = localStorage.getItem(\"username\");\n  const [showId, setShowId] = useState(null);\n  const toggleModify = (idthread) => { setShowId(showId => showId === idthread ? null : idthread); };\n  const [avatar, setAvatar] = useState([]);\n  const [checkNewAvatar, setcheckNewAvatar] = useState(true);\n  const [newAvatar, setnewAvatar] = useState(\"\");\n\n  let history = useHistory();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    Axios.get(`https://social-media-image-backend.herokuapp.com//thread/byUser/${localStorage.getItem(\"username\")}`, {\n      headers: { 'Authorization': `bearer ${token}` }\n    }).then((response) => {\n      setYourUploads(response.data[0]);\n      if (response.data[1][0].avatar == null) {\n        setcheckNewAvatar(false)\n      } else {\n        setnewAvatar(response.data[1][0].avatar)\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const formData = new FormData();\n    formData.append(\"file\", avatar[0]);\n    formData.append(\"upload_preset\", \"h0vs2ijr\");\n    if (avatar.length > 0) {\n      Axios.post(\n        `https://api.cloudinary.com/v1_1/dzbs5syc9/image/upload`,\n        formData\n      ).then((response) => {\n        const fileName = response.data.public_id;\n        Axios.post(\"https://social-media-image-backend.herokuapp.com//user/avatar\", {\n          image: fileName,\n        }, {\n          headers: {\n            'Authorization': `bearer ${token}`\n          }\n        }).then((response) => {\n          setnewAvatar(response.data[0].avatar)\n        })\n      });\n    }\n  }, [avatar]);\n\n\n  const deleteThread = (image, idthread) => {\n    Axios.delete(\"https://social-media-image-backend.herokuapp.com//thread/delete\", {\n      headers: { 'Authorization': `bearer ${token}` },\n      data: {\n        idthread: idthread,\n        username: username,\n        image: image\n      }\n    }).then((response) => {\n      setYourUploads(response.data[3]);\n    });\n  };\n\n  const deleteProfile = () => {\n    Axios.delete(\"https://social-media-image-backend.herokuapp.com//user/delete\", {\n      headers: { 'Authorization': `bearer ${token}` },\n    }).then((response) => {\n      localStorage.removeItem(\"role\");\n      localStorage.setItem(\"loggedIn\", \"false\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"token\");\n      history.push(\"/\");\n    });\n  };\n\n  const modify = (idthread) => {\n    checkTextInput();\n    if (checkTextInput() === true) {\n      Axios.post(\"https://social-media-image-backend.herokuapp.com//thread/modify\", {\n        title: title,\n        description: description,\n        idthread: idthread,\n      }, {\n        headers: {\n          'Authorization': `bearer ${token}`\n        }\n      }).then((response) => {\n        setYourUploads(response.data);\n        toggleModify(idthread);\n      }).catch(function (error) {\n        if (error.response) {\n          setErrorMessage(error.response.data.message);\n        }\n      });\n    }\n  };\n\n  const checkTextInput = () => {\n    if (!title.trim()) {\n      setErrorMessage(\"Le champ du titre est vide\");\n      return false;\n    } else if (!description.trim()) {\n      setErrorMessage(\"Le champ de la description est vide\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  return (\n    <main className=\"Profile\">\n      <article className=\"profile-top\">\n        <div className=\"user-info\">\n          {checkNewAvatar ? (<Image alt=\"Avatar\" cloudName=\"dzbs5syc9\" publicId={newAvatar} className=\"img-profile\" />) : (<img className=\"img-profile\" src={avatarDefault} alt=\"Default Avatar\" />)}\n          <h1>{localStorage.getItem(\"username\")}</h1>\n          <button className=\"btn-profile\" onClick={deleteProfile}>Supprimer le compte</button>\n        </div>\n        <div>\n          <label htmlFor=\"file\" className=\"label-file\">Changer d'avatar</label>\n          <input id=\"file\" type=\"file\" onChange={(e) => setAvatar(e.target.files)} className=\"input-avatar\"></input>\n        </div>\n      </article>\n      <h2>Vos publications :</h2>\n      {yourUploads.map((val) => {\n        console.log(\"val\", val)\n        if (val.image) {\n          return (\n            <article className=\"thread-profile\" key={val.idthread}>\n              <div className=\"Post\">\n                <div className=\"Image\">\n                  <Image alt={\"Image de l'article \" + val.title} cloudName=\"dzbs5syc9\" publicId={val.image} />\n                </div>\n                <div className=\"Content\">\n                  <div className=\"title\">\n                    {val.title} / publié par {val.author} le {val.date.slice(0, 10)}\n                  </div>\n                  <div className=\"description\">{val.description}</div>\n                  <div className=\"Engagement\">\n                    <ThumbUpAltIcon id=\"likeButton\" />\n                    {val.likecount}\n                  </div>\n                </div>\n              </div>\n              <div className=\"buttons\">\n                <button className=\"btn-post\" onClick={() => { deleteThread(val.image, val.idthread) }}>Supprimer</button>\n                <button className=\"btn-update\" onClick={() => { toggleModify(val.idthread) }}>Modifier</button>\n              </div>\n              {showId === val.idthread && (\n                <div className=\"input-upload\">\n                  <h3>Titre</h3>\n                  <input\n                    type=\"text\"\n                    placeholder={val.title}\n                    onChange={(event) => {\n                      setTitle(event.target.value);\n                    }}\n                  />\n                  <h3>Description</h3>\n                  <textarea\n                    placeholder={val.description}\n                    onChange={(event) => {\n                      setDescription(event.target.value);\n                    }}\n                  />\n                  <button onClick={() => { modify(val.idthread) }}>Confirmer la modification</button>\n                  <p className=\"msg-err\">{errorMessage}</p>\n                </div>\n              )}\n            </article>\n          );\n        } else {\n          return (\n            <article className=\"thread-profile\" key={val.idthread}>\n              <div className=\"Post\">\n                <div className=\"Content\">\n                  <div className=\"title\">\n                    {val.title} / publié par {val.author} le {val.date.slice(0, 10)}\n                  </div>\n                  <div className=\"description\">{val.description}</div>\n                  <div className=\"Engagement\">\n                    <ThumbUpAltIcon id=\"likeButton\" />\n                    {val.likecount}\n                  </div>\n                </div>\n              </div>\n              <div className=\"buttons\">\n                <button className=\"btn-post\" onClick={() => { deleteThread(val.image, val.idthread) }}>Supprimer</button>\n                <button className=\"btn-update\" onClick={() => { toggleModify(val.idthread) }}>Modifier</button>\n              </div>\n              {showId === val.idthread && (\n                <div className=\"input-upload\">\n                  <h3>Titre</h3>\n                  <input\n                    type=\"text\"\n                    placeholder={val.title}\n                    onChange={(event) => {\n                      setTitle(event.target.value);\n                    }}\n                  />\n                  <h3>Description</h3>\n                  <textarea\n                    type=\"text\"\n                    placeholder={val.description}\n                    onChange={(event) => {\n                      setDescription(event.target.value);\n                    }} />\n                  <button onClick={() => { modify(val.idthread) }}>Confirmer la modification</button>\n                  <p className=\"msg-err\">{errorMessage}</p>\n                </div>\n              )}\n            </article>\n          );\n        }\n      })}\n    </main>\n  );\n}\n\nexport default Profile;\n","import Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Image } from \"cloudinary-react\";\nimport \"./Moderateur.css\";\nimport avatar from '../../assets/avatar.png';\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport ChatIcon from '@material-ui/icons/Chat';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nfunction Moderateur() {\n  \n  const [showId, setShowId] = useState(null);\n  const [yourUploads, setYourUploads] = useState([]);\n  const token = localStorage.getItem(\"token\");\n  const username = localStorage.getItem(\"username\");\n  const toggleComments = (idthread) => { setShowId(showId => showId === idthread ? null : idthread); };\n  const [threadComments, setThreadcomments] = useState([]);\n  const [ariaExpanded, setariaExpanded] = useState(\"false\");\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    Axios.get(`https://social-media-image-backend.herokuapp.com//thread`, {\n      headers: { 'Authorization': `token ${token}` }\n    }).then((response) => {\n      console.log(response)\n      setYourUploads(response.data);\n    });\n  }, []);\n\n  const deleteThread = (idthread, image) => {\n    Axios.delete(\"https://social-media-image-backend.herokuapp.com//thread/delete\", {\n      headers: { 'Authorization': `bearer ${token}` },\n      data: {\n        idthread: idthread,\n        username: username,\n        image: image\n      }\n    }).then((response) => {\n      setYourUploads(response.data[4]);\n    });\n  };\n\n  const getComment = (idthread) => {\n    if(ariaExpanded === \"true\"){setariaExpanded(\"false\")}else{setariaExpanded(\"true\")}\n    Axios.post(\"https://social-media-image-backend.herokuapp.com//thread/getComments\", {\n      idthread: idthread,\n    }, {\n      headers: {\n        'Authorization': `bearer ${token}`\n      }\n    }).then((response) => {\n      setThreadcomments(response.data);\n    });\n  };\n\n  const deleteComment = (idcomment, threadComment) => {\n    Axios.delete(\"https://social-media-image-backend.herokuapp.com//thread/deleteComment\", {\n      headers: { 'Authorization': `bearer ${token}` },\n      data: {\n        idcomments: idcomment,\n        threadComment: threadComment,\n      }\n    }).then((response) => {\n      setThreadcomments(response.data[2]);\n      setYourUploads(response.data[3])\n    });\n  };\n\n  return (\n    <main className=\"moderateur\">\n      <div className=\"moderateur-top\">\n        <img className=\"img-moderateur\" src={avatar} alt=\"Avatar du profil\" />\n        <h1>Modérateur</h1>\n      </div>\n      <h2>Gérer les publications :</h2>\n      {yourUploads.map((val, key) => {\n        if (val.image) {\n          return (\n            <div className=\"moderateur\" key={val.idthread}>\n              <article className=\"Post\">\n                <div className=\"Image\">\n                  <Image alt={\"Image de l'article \" + val.title} cloudName=\"dzbs5syc9\" publicId={val.image} />\n                </div>\n                <div className=\"Content\">\n                  <div className=\"title\">\n                    {val.title} / publié par {val.author} le {val.date.slice(0, 10)}\n                  </div>\n                  <div className=\"description\">{val.description}</div>\n                  <div className=\"Engagement\">\n                    <ThumbUpAltIcon id=\"likeButton\" />\n                    {val.likecount}\n                    <button className=\"btn-icons\" aria-expanded={ariaExpanded} aria-label=\"Comments\" aria-controls=\"send-com\" onClick={function (event) { toggleComments(val.idthread); getComment(val.idthread); }} ><ChatIcon id=\"commentButton\"/></button>\n                    <div className=\"counts\">{val.commentcount}</div>\n                  </div>\n                  {showId === val.idthread && (\n                    <div className=\"comments\" id=\"send-com\">\n                      {threadComments.map((com, index) => {\n                        return (\n                          <div key={index} className=\"post-bottom\">\n                            {com.avatar === null && (<img className=\"img-comment\" src={avatar} alt=\"Avatar du profil\" />)}\n                            {com.avatar != null && (<Image alt=\"avatar\" cloudName=\"dzbs5syc9\" publicId={com.avatar} className=\"img-comment\" />)}\n                            <div className=\"comment\">\n                              <p className=\"userComment\">{com.usercomment}</p>\n                              <p>{com.comment}</p>\n                            </div>\n                            <button className=\"icon-delete\" onClick={() =>{ deleteComment(com.idcomments, val.idthread) } }><DeleteForeverIcon/></button>\n                          </div>)\n                      })}\n                    </div>\n                  )}\n                </div>\n              </article>\n              <div className=\"buttons\">\n                <button className=\"btn-post\" onClick={() => { deleteThread(val.idthread, key) }}>Supprimer</button>\n              </div>\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"moderateur\" key={val.idthread}>\n              <article className=\"Post\">\n                <div className=\"Content\">\n                  <div className=\"title\">\n                    {val.title} / publié par {val.author} le {val.date.slice(0, 10)}\n                  </div>\n                  <div className=\"description\">{val.description}</div>\n                  <div className=\"Engagement\">\n                    <ThumbUpAltIcon id=\"likeButton\"/>\n                    {val.likecount}\n                    <button className=\"btn-icons\" aria-expanded={ariaExpanded} aria-controls=\"send-com\" onClick={function (event) { toggleComments(val.idthread); getComment(val.idthread); }} ><ChatIcon id=\"commentButton\"/></button>\n                    <div className=\"counts\">{val.commentcount}</div>\n                  </div>\n                  {showId === val.idthread && (\n                    <div className=\"comments\" id=\"send-com\">\n                      {threadComments.map((com, index) => {\n                        return (\n                          <div key={index} className=\"post-bottom\">\n                            {com.avatar === null && (<img className=\"img-comment\" src={avatar} alt=\"Avatar du profil\" />)}\n                            {com.avatar != null && (<Image alt=\"avatar\" cloudName=\"dzbs5syc9\" publicId={com.avatar} className=\"img-comment\" />)}\n                            <div className=\"comment\">\n                              <p className=\"userComment\">{com.usercomment}</p>\n                              <p>{com.comment}</p>\n                            </div>\n                            <button className=\"icon-delete\" onClick={() =>{ deleteComment(com.idcomments, val.idthread) } }><DeleteForeverIcon/></button>\n                          </div>)\n                      })}\n                    </div>\n                  )}\n                </div>\n              </article>\n              <div className=\"buttons\">\n                <button className=\"btn-post\" onClick={() => { deleteThread(val.idthread, key); }}>Supprimer</button>\n              </div>\n            </div>\n          );\n        }\n      })}\n    </main>\n  );\n}\n\nexport default Moderateur;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home/Home\";\nimport Navbar from \"./components/Navbar\";\nimport Register from \"./pages/Register/Register\";\nimport Login from \"./pages/Login/Login\";\nimport Upload from \"./pages/Upload/Upload\";\nimport Profile from \"./pages/Profile/Profile\";\nimport Moderateur from \"./pages/Moderateur/Moderateur\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n\n  const loggedIn = JSON.parse(localStorage.getItem(\"loggedIn\"))\n  const [isLoggedIn, setisloggedIn] = useState(loggedIn);\n  const role = localStorage.getItem(\"role\");\n  const [userRole, setuserRole] = useState(role);\n  \n  \n  useEffect(() => {\n        setInterval(() => {\n          const loggedIn = JSON.parse(localStorage.getItem(\"loggedIn\"))\n          const role = localStorage.getItem(\"role\");\n            setisloggedIn(loggedIn);\n            setuserRole(role)\n            }, 0)\n    }, []);\n\n  return (\n    <>\n      <Router>\n          <Navbar isLoggedIn={isLoggedIn} userRole={userRole} />\n          <Route path=\"/\" exact render={() => <Home isLoggedIn={isLoggedIn}/>} />\n          <Route path=\"/register\" exact render={() => <Register />} />\n          <Route path=\"/login\" exact render={() => <Login />} />\n          <Route path=\"/upload\" exact render={() => <Upload />} />\n          <Route path=\"/profile\" exact render={() => <Profile />} />\n          <Route path=\"/moderateur\" exact render={() => <Moderateur />} />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n"],"sourceRoot":""}